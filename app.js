var answersShowing = {
  answer1: false,
  answer2: false,
  answer3: false,
  answer4: false,
  answer5: false,
  answer6: false,
  answer7: false,
  answer8: false
};

 var addAnswer = function(answer, button, answerVar) {
  document.getElementById(answer).innerText = answerVar;

  document.getElementById(answer).style.display="none";

  document.getElementById(button).addEventListener("click", function(){toggleAnswer(answer, button, answerVar);});
 };

 var toggleAnswer = function(answer, button, answerVar) {
  if (answersShowing.answerVar === false) {
    document.getElementById(answer).style.display="initial";
    document.getElementById(button).innerText="Hide Answer";
    answersShowing.answerVar = true;
  } else {
    document.getElementById(answer).style.display="none";
    document.getElementById(button).innerText="Show Answer";
    answersShowing.answerVar = false;
  }
};

// //Question 1
// //If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
// //
// //Find the sum of all the multiples of 3 or 5 below 1000.
// ( function () {

// var answer1 = 0;

// for (var i =0; i <1000; i++) {
//   if (i % 3 === 0 || i % 5 === 0) {
//     answer1 += i;
//   }
// }

// addAnswer("answer1", "button1", answer1);

// })();
// // Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// // By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
// ( function () {
//   var x = 1;
//   var y = 2;
//   var z = 0;
//   var answer2 = 2;

//   for (var i = 0; i < 4000000; i++) {
//       z = x + y;
//       x = y;
//       y = z;
//       if (y < 4000000 && (z % 2 === 0) ) {
//         answer2 += z;
//       } else if (y >= 4000000) {
//         break;
//       }
//   };

// addAnswer("answer2", "button2", answer2);
// })();

// // The prime factors of 13195 are 5, 7, 13 and 29.

// // What is the largest prime factor of the number 600851475143 ?


// ( function () {
//   var factorize = 600851475143;
//   var primes = [];
//   var timesThrough = 0;
//   var answer3;
//   var findPrime = function(startNumber) {
//     for(var i = 0; i < startNumber; i ++) {
//       var prime = true;
//       for(var j = 0; j < i; j++) {
//         if (i % j === 0 && j !== 1) {
//           prime = false;
//         }
//       }
//       if (prime === true && ( primes.indexOf(i) === -1 ) && i > 1 && factorize % i ===0) {
//           primes.push(i);
//           factorize = factorize / i;
//           break;
//       }
//     }

//     timesThrough++;
//     if (factorize > 1 && timesThrough <3) {
//         findPrime(factorize);
//     }
//     answer3 = factorize;
//   };

//   findPrime(500);

//   addAnswer("answer3", "button3", answer3);
// })();

// // A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.

// // Find the largest palindrome made from the product of two 3-digit numbers.

// ( function () {

//   var answer4 = 0;
//   var product;
//   var reverseProduct;
//   var productString;

//   function reverse(nString) {
//     var o = '';
//     for (var i = nString.length - 1; i >= 0; i--) {
//       o += nString[i];
//       };
//     return o;
//   };


//   for (var i = 100; i < 1000; i++) {
//     for(var j = 100; j < 1000; j++) {
//       product = i * j;
//       productString = product.toString();
//       reverseProduct = reverse(productString);
//       if (product == reverseProduct && product > answer4) {
//         answer4 = product;
//       }
//     }
//   }
//   addAnswer("answer4", "button4", answer4);
// })();


// //5. 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

// //What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?

// ( function () {
//   var answer5;
//   var bigNum = 500000000;
//   var oldI = bigNum;
//   var record = 0;
//   loop1:
//   for(var i = 0; i < bigNum; i ++) {
//     loop2:
//     for(var j = 1; j < 21; j++) {
//       if(i % j === 0) {
//         record +=1;
//         if(record === 20){
//           if (i < oldI && i > 0) {
//             answer5 = i;
//             oldI = i;
//             break loop1;
//           } else {
//             break;
//           }
//         }
//       } else {
//         break;
//       }
//     }
//     record = 0;
//   };
//   addAnswer("answer5", "button5", answer5);
// })();

// // The sum of the squares of the first ten natural numbers is,

// // 12 + 22 + ... + 102 = 385
// // The square of the sum of the first ten natural numbers is,

// // (1 + 2 + ... + 10)2 = 552 = 3025
// // Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.

// // Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.

// ( function () {
//   var answer6;
//   var x = 0;
//   var y = 0;

//   for(var i = 1; i <= 100; i++){
//     x += i * i;
//   }

//   for(var i = 1; i <= 100; i++){
//     y += i;
//   }

//   var z = y * y;

//   answer6 = z - x;


//   addAnswer("answer6", "button6", answer6);
// })();
//*******NEEDS REFACTOR!!!******
// By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

// What is the 10 001st prime number?

// ( function () {

//   var answer7;
//   var startNumber = 10000000;
//   var newPrime;
//   var primes = 0;
//   var primeBreak1 = 5000;
//   var primeBreakTotal = 10001;

//   for(var i = 0; i < startNumber; i++) {
//     var prime = true;
//     for(var j = 0; j < i; j++) {
//       if (i % j === 0 && j !== 1) {
//         prime = false;
//         break;
//       }
//     }
//     if (prime === true && i > 1) {
//         newPrime = i;
//         primes++;
//     }
//     if(primes >= primeBreak1) {
//       console.log(newPrime);
//       break;
//     }
//   }

//   for(var i = newPrime; i < startNumber; i++) {
//     var prime = true;
//     for(var j = 1; j < i; j+=2) {
//       if (i % j === 0 && j !== 1) {
//         prime = false;
//         break;
//       }
//     }
//     if (prime === true && i > 1) {
//         newPrime = i;
//         primes++;
//     }
//     if(primes >= primeBreakTotal +2) {
//       console.log(newPrime);
//       break;
//     }
//   }
//   answer7 = newPrime;

//   addAnswer("answer7", "button7", answer7);
// })();

//The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

//73167...52963450 (really big number)

//Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

( function () {
  var bigNumString = "731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186947885184385861560789112949495459501737958331952853208805511125406987471585238630507156932909632952274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904915604407723907138105158593079608667017242712188399879790879227492190169972088809377665727333001053367881220235421809751254540594752243525849077116705560136048395864467063244157221553975369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474821663704844031998900088952434506585412275886668811642717147992444292823086346567481391912316282458617866458359124566529476545682848912883142607690042242190226710556263211111093705442175069416589604080719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606058861164671094050775410022569831552000559357297257163626956188267042825248360082325753042075296340";

  var smallNumString = "1234567890";

  var length = bigNumString.length;
  var factor = 13;
  var answer8 = 0;
  var expo = 0;
  var numAdd = [];
  var numMult;
  var factorFunc = function(i, factor) {
    numMult = 1;
    for(var k = 0; k < factor; k++) {
      numAdd.push(bigNumString.charAt(i + k) || 0);
    }
    for(var j = 0; j < factor; j++){
      numMult *= numAdd.pop();
    }
    return numMult;
  };

  for(var i = 0; i <= length - factor; i++) {
    expo = factorFunc(i, factor);
    if(expo >= answer8) {
      answer8 = expo;
    }
  }
  addAnswer("answer8", "button8", answer8);
})();

// A Pythagorean triplet is a set of three natural numbers, a < b < c, for which,

// a2 + b2 = c2
// For example, 3 squared + 4 squared = 9 + 16 = 25 = 5 squared.

// There exists exactly one Pythagorean triplet for which a + b + c = 1000.
// Find the product abc.


( function () {

  var length = 1000;
  for(var i = 0; i <= length; i++) {
    for(var j = 0; j <= length; j++) {
      for(var k = 0; k <= length; k++) {
        if (i<j && j<k && ((i*i) + (j*j) === (k*k)) && i + j + k === 1000) {
          console.log(i);
          console.log(j);
          console.log(k);
          console.log(i*j*k);
        }
      }
    }
  }

  })();